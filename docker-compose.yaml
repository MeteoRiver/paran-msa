services:
  eureka:
    build:
      context: ./server/eureka-server
      dockerfile: Dockerfile
    image: meteoriver/paran:eureka-${BUILD_NUMBER}
    container_name: eureka
    ports:
      - 8761:8761
    networks:
      - paran-net
    hostname: eureka

  gateway:
    build:
      context: ./server/gateway-server
      dockerfile: Dockerfile
    image: meteoriver/paran:gateway-${BUILD_NUMBER}
    container_name: gateway
    ports:
      - 8000:8000
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: gateway

  config:
    build:
      context: ./server/config-server
      dockerfile: Dockerfile
    image: meteoriver/paran:config-${BUILD_NUMBER}
    container_name: config
    ports:
      - 8888:8888
    networks:
      - paran-net
    depends_on:
      - eureka
    hostname: config

  chat:
    build:
      context: ./service/chat-service
      dockerfile: Dockerfile
    image: meteoriver/paran:chat-${BUILD_NUMBER}
    container_name: chat
    ports:
      - 8081:8081
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: chat

  comment:
    build:
      context: ./service/comment-service
      dockerfile: Dockerfile
    image: meteoriver/paran:comment-${BUILD_NUMBER}
    container_name: comment
    ports:
      - 8084:8084
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: comment

  file:
    build:
      context: ./service/file-service
      dockerfile: Dockerfile
    image: meteoriver/paran:file-${BUILD_NUMBER}
    container_name: file
    ports:
      - 8090:8090
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: file

  group:
    build:
      context: ./service/group-service
      dockerfile: Dockerfile
    image: meteoriver/paran:group-${BUILD_NUMBER}
    container_name: group
    ports:
      - 8085:8085
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: group

  room:
    build:
      context: ./service/room-service
      dockerfile: Dockerfile
    image: meteoriver/paran:room-${BUILD_NUMBER}
    container_name: room
    ports:
      - 8083:8083
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: room

  user:
    build:
      context: ./service/user-service
      dockerfile: Dockerfile
    image: meteoriver/paran:user-${BUILD_NUMBER}
    container_name: user
    ports:
      - 8082:8082
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: user

  services:
    eureka:
      build:
        context: ./server/eureka-server
        dockerfile: Dockerfile
      image: meteoriver/paran:eureka-${BUILD_NUMBER}
      container_name: eureka
      ports:
        - 8761:8761
      networks:
        - paran-net
      hostname: eureka

    gateway:
      build:
        context: ./server/gateway-server
        dockerfile: Dockerfile
      image: meteoriver/paran:gateway-${BUILD_NUMBER}
      container_name: gateway
      ports:
        - 8000:8000
      networks:
        - paran-net
      depends_on:
        - config
        - eureka
      hostname: gateway

    config:
      build:
        context: ./server/config-server
        dockerfile: Dockerfile
      image: meteoriver/paran:config-${BUILD_NUMBER}
      container_name: config
      ports:
        - 8888:8888
      networks:
        - paran-net
      depends_on:
        - eureka
      hostname: config

    chat:
      build:
        context: ./service/chat-service
        dockerfile: Dockerfile
      image: meteoriver/paran:chat-${BUILD_NUMBER}
      container_name: chat
      ports:
        - 8081:8081
      networks:
        - paran-net
      depends_on:
        - config
        - eureka
      hostname: chat

    comment:
      build:
        context: ./service/comment-service
        dockerfile: Dockerfile
      image: meteoriver/paran:comment-${BUILD_NUMBER}
      container_name: comment
      ports:
        - 8084:8084
      networks:
        - paran-net
      depends_on:
        - config
        - eureka
      hostname: comment

    file:
      build:
        context: ./service/file-service
        dockerfile: Dockerfile
      image: meteoriver/paran:file-${BUILD_NUMBER}
      container_name: file
      ports:
        - 8090:8090
      networks:
        - paran-net
      depends_on:
        - config
        - eureka
      hostname: file

    group:
      build:
        context: ./service/group-service
        dockerfile: Dockerfile
      image: meteoriver/paran:group-${BUILD_NUMBER}
      container_name: group
      ports:
        - 8085:8085
      networks:
        - paran-net
      depends_on:
        - config
        - eureka
      hostname: group

    room:
      build:
        context: ./service/room-service
        dockerfile: Dockerfile
      image: meteoriver/paran:room-${BUILD_NUMBER}
      container_name: room
      ports:
        - 8083:8083
      networks:
        - paran-net
      depends_on:
        - config
        - eureka
      hostname: room

    user:
      build:
        context: ./service/user-service
        dockerfile: Dockerfile
      image: meteoriver/paran:user-${BUILD_NUMBER}
      container_name: user
      ports:
        - 8082:8082
      networks:
        - paran-net
      depends_on:
        - config
        - eureka
      hostname: user

    mysql:
      image: mysql:8.0
      container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: parandb
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    networks:
      - paran-net
    hostname: mysql

    mongodb:
      image: mongo
      container_name: mongo
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: 1234
      ports:
        - "27017:27017"
      networks:
        - paran-net
      hostname: mongo

    redis:
      image: redis:latest
      container_name: redis
      ports:
        - "6379:6379"
      networks:
        - paran-net
      hostname: redis

  networks:
    paran-net:
      driver: bridge

networks:
  paran-net:
    driver: bridge