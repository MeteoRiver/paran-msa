services:
  eureka:
    build:
      context: ./server/eureka-server
      dockerfile: Dockerfile
    image: meteoriver/paran:eureka-${BUILD_NUMBER}
    container_name: eureka
    ports:
      - 8761:8761
    networks:
      - paran-net
    hostname: eureka
    environment:
      - SPRING_PROFILES_ACTIVE=prod

  config:
    build:
      context: ./server/config-server
      dockerfile: Dockerfile
    image: meteoriver/paran:config-${BUILD_NUMBER}
    container_name: config
    ports:
      - 8888:8888
    networks:
      - paran-net
    hostname: config
    environment:
      - SPRING_PROFILES_ACTIVE=prod

  gateway:
    build:
      context: ./server/gateway-server
      dockerfile: Dockerfile
    image: meteoriver/paran:gateway-${BUILD_NUMBER}
    container_name: gateway
    ports:
      - 8000:8000
    networks:
      - paran-net
    depends_on:
      - eureka
      - config
    hostname: gateway
    environment:
      - SPRING_PROFILES_ACTIVE=prod

  chat:
    build:
      context: ./service/chat-service
      dockerfile: Dockerfile
    image: meteoriver/paran:chat-${BUILD_NUMBER}
    container_name: chat
    ports:
      - 8081:8081
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: chat
    environment:
      - SPRING_PROFILES_ACTIVE=prod

  comment:
    build:
      context: ./service/comment-service
      dockerfile: Dockerfile
    image: meteoriver/paran:comment-${BUILD_NUMBER}
    container_name: comment
    ports:
      - 8084:8084
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: comment
    environment:
      - SPRING_PROFILES_ACTIVE=prod

  file:
    build:
      context: ./service/file-service
      dockerfile: Dockerfile
    image: meteoriver/paran:file-${BUILD_NUMBER}
    container_name: file
    ports:
      - 8090:8090
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: file
    environment:
      - SPRING_PROFILES_ACTIVE=prod

  group:
    build:
      context: ./service/group-service
      dockerfile: Dockerfile
    image: meteoriver/paran:group-${BUILD_NUMBER}
    container_name: group
    ports:
      - 8085:8085
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: group
    environment:
      - SPRING_PROFILES_ACTIVE=prod

  room:
    build:
      context: ./service/room-service
      dockerfile: Dockerfile
    image: meteoriver/paran:room-${BUILD_NUMBER}
    container_name: room
    ports:
      - 8083:8083
    networks:
      - paran-net
    depends_on:
      - config
      - eureka
    hostname: room
    environment:
      - SPRING_PROFILES_ACTIVE=prod

  user:
    build:
      context: ./service/user-service
      dockerfile: Dockerfile
    image: meteoriver/paran:user-${BUILD_NUMBER}
    container_name: user
    ports:
      - 8082:8082
    networks:
      - paran-net
    depends_on:
      - eureka
      - config
    hostname: user
    environment:
      - SPRING_PROFILES_ACTIVE=prod

networks:
  paran-net:
    driver: bridge